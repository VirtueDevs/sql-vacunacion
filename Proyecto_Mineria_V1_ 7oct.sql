-- Crear usando el comando EDIT Borrar_Objetos.sql

Set Linesize 132
Set pagesize 0
Set heading off

spool bor_tablas.sql

SELECT 'Drop Table '||tname||' cascade constraints;'
From TAB
Where Tname Not In ('EMP','DEPT','SALGRADE','EMPLOYEE','DEPARTMENT','DEPT30','EMPLOYEE2','MY_EMPLOYEE','BONUS');


spool off

Set Linesize 80
Set pagesize 14
Set heading on

Purge Tablespace USERS;

-- Codigo en le script del proyecto
--Borrar tablas -> bor_tablas.sql
-- Creacion de tablas El script se llama: Crear_Tablas_Proyecto.sql
CREATE TABLE PERSONA
    (id  NUMBER(10) NOT NULL,
    nombre VARCHAR2(20) NOT NULL,
    segundo_nombre VARCHAR2(20),
    apellido VARCHAR2(20) NOT NULL,
    segundo_apellido VARCHAR2(20),
    fecha_nacimiento DATE NOT NULL,
    email VARCHAR2(60) NOT NULL,
    direccion VARCHAR2(200) NOT NULL,
    estrato NUMBER(1) NOT NULL,
    telefono NUMBER(10) NOT NULL,
    tipo_documento NUMBER(1) NOT NULL,
    id_sexo NUMBER(1) NOT NULL,
    id_sangre NUMBER(1) NOT NULL,
    id_grupo NUMBER(2) NOT NULL,
    id_comorbilidad NUMBER(2),
    codigo_municipio NUMBER(10) NOT NULL,
    fecha_comorbilidad DATE,
    CONSTRAINT id_persona_pk PRIMARY KEY(id));

CREATE TABLE TIPO_IDENTIFICACION 
    (id  NUMBER(1) NOT NULL,
    nombre VARCHAR2(20) NOT NULL,
    CONSTRAINT id_id_pk PRIMARY KEY (id));

CREATE TABLE SEXO
    (id NUMBER(1) NOT NULL,
    nombre VARCHAR2(10) NOT NULL,
    CONSTRAINT nombre_sexo_pk PRIMARY KEY (id));

CREATE TABLE TIPO_SANGRE
    (id NUMBER(1) NOT NULL,
    nombre VARCHAR2(3) NOT NULL,
    CONSTRAINT nombre_sangre_pk PRIMARY KEY (id));

CREATE TABLE COMORBILIDAD
    (id NUMBER(2) NOT NULL,
    nombre VARCHAR2(50) NOT NULL,
    CONSTRAINT id_comorbilidad_pk PRIMARY KEY (id));

CREATE TABLE MUNICIPIO
    (codigo_postal NUMBER(6) NOT NULL,
    nombre VARCHAR2(80) NOT NULL,
    id_departamento NUMBER(3) NOT NULL,
    CONSTRAINT codigo_municipio_pk PRIMARY KEY (codigo_postal));

CREATE TABLE DEPARTAMENTO
    (id NUMBER(2) NOT NULL,
    nombre VARCHAR2(90) NOT NULL,
    CONSTRAINT id_departamento_pk PRIMARY KEY (id));

CREATE TABLE GRUPO_ETNICO
    (id NUMBER(2) NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    CONSTRAINT id_grupo_pk PRIMARY KEY (id));

CREATE TABLE EMPLEADO
    (id NUMBER(10) NOT NULL,
    fecha_ingreso DATE  NOT NULL,
	salario NUMBER(20) NOT NULL,
    id_persona NUMBER(10) NOT NULL,
    id_cargo NUMBER(2) NOT NULL,
    nit_caja NUMBER(10) NOT NULL,
    CONSTRAINT id_empleado_pk PRIMARY KEY (id));

CREATE TABLE CARGO
    (id NUMBER(2) NOT NULL,
    nombre VARCHAR2(30) NOT NULL,
    CONSTRAINT id_cargo_pk PRIMARY KEY (id));

CREATE TABLE PUNTO_VACUNACION
    (id NUMBER(5)  NOT NULL,
    direccion VARCHAR2(150)  NOT NULL,
    id_empleado NUMBER(10) NOT NULL,    
    CONSTRAINT id_punto_pk PRIMARY KEY (id));

CREATE TABLE LOTE
    (id NUMBER(10)  NOT NULL,
    lugar_origen VARCHAR2(20)  NOT NULL,
    fecha_vencimiento DATE NOT NULL,
    estado VARCHAR2(50) NOT NULL,
    fecha_produccion DATE NOT NULL,
    id_punto NUMBER(5) NOT NULL,
    id_transportadora NUMBER(3) NOT NULL,
    id_avion NUMBER(5) NOT NULL,
    nit_fabricante NUMBER(10) NOT NULL,
    CONSTRAINT id_lote_pk PRIMARY KEY (id));

CREATE TABLE FABRICANTE
    (nit NUMBER(10) NOT NULL,
    nombre VARCHAR2(60) NOT NULL,
    direccion_principal VARCHAR2(100) NOT NULL,
    email VARCHAR2(90) NOT NULL,
    telefono VARCHAR2(30) NOT NULL,
	costo NUMBER(30) NOT NULL,
    id_pais NUMBER(3) NOT NULL,
    CONSTRAINT nit_fabricante_pk PRIMARY KEY (nit));

CREATE TABLE TRANSPORTADORA
    (id NUMBER(3) NOT NULL,
    nombre VARCHAR2(60) NOT NULL,
    email VARCHAR2(80) NOT NULL,
    telefono VARCHAR2(50) NOT NULL,
	costo NUMBER(30) NOT NULL,
    CONSTRAINT id_transportadora_pk PRIMARY KEY (id));

CREATE TABLE PAIS
    (id NUMBER(3) NOT NULL,
    nombre VARCHAR2(20) NOT NULL,
    CONSTRAINT id_pais_pk PRIMARY KEY (id));

CREATE TABLE AEROLINEA
    (nit NUMBER(20)  NOT NULL,
    nombre VARCHAR2(60)  NOT NULL,
    id_pais NUMBER(3) NOT NULL,
    CONSTRAINT nit_aerolinea_pk PRIMARY KEY (nit));

CREATE TABLE AVION
    (id NUMBER(5) NOT NULL,
    nombre VARCHAR2(60) NOT NULL,
	costo_uso NUMBER(30) NOT NULL,
    fecha_vuelo DATE NOT NULL,
    fecha_llegada DATE NOT NULL,
	nit_aerolinea NUMBER(20) NOT NULL,
    CONSTRAINT id_avion_pk PRIMARY KEY (id));

CREATE TABLE INVENTARIO
    (codigo NUMBER(10) NOT NULL,
    estado VARCHAR2(20) NOT NULL,
    id_lote NUMBER(10) NOT NULL,
    id_vacuna NUMBER(1) NOT NULL,
    CONSTRAINT codigo_inventario_pk PRIMARY KEY (codigo));

CREATE TABLE VACUNA
    (id NUMBER(1) NOT NULL,
    nombre VARCHAR2(20) NOT NULL,
    beneficios VARCHAR2(1000),
    riesgos VARCHAR2(1000),
    id_tipo_vacuna NUMBER(1) NOT NULL,
    CONSTRAINT id_vacuna_pk PRIMARY KEY (id));

CREATE TABLE TIPO_VACUNA  
    (id NUMBER(1) NOT NULL,
    nombre VARCHAR2(20) NOT NULL,
    descripcion VARCHAR2(1100),
    CONSTRAINT id_tipo_vacuna_pk PRIMARY KEY (id));

CREATE TABLE INFO_DOSIS
    (id NUMBER(10) NOT NULL,
    dosis NUMBER(1) NOT NULL,
    fecha DATE NOT NULL,
    nit_ips NUMBER(3) NOT NULL,
    id_empleado NUMBER(10) NOT NULL,
    id_inventario NUMBER(10) NOT NULL,
	id_carnet NUMBER(10) NOT NULL,
    CONSTRAINT num_dosis_pk PRIMARY KEY (id));

CREATE TABLE IPS 
    (nit NUMBER(3) NOT NULL,
    nombre VARCHAR2(150) NOT NULL,
    direccion_principal VARCHAR2(100) NOT NULL,
    CONSTRAINT nit_ips_pk PRIMARY KEY (nit));

CREATE TABLE CARNET_VACUNA
    (id NUMBER(10) NOT NULL,
    id_paciente NUMBER(10) NOT NULL,
    CONSTRAINT id_carnet_pk PRIMARY KEY (id));

CREATE TABLE PACIENTE
    (id NUMBER(10) NOT NULL,
    id_persona NUMBER(10) NOT NULL,
    CONSTRAINT id_paciente_pk PRIMARY KEY (id));

CREATE TABLE AFILIACION
    (id NUMBER(10) NOT NULL,
    fecha_inicio DATE NOT NULL,
    id_paciente NUMBER(10) NOT NULL,
    nit_caja NUMBER(10) NOT NULL,
    codigo_ciudad NUMBER(6) NOT NULL,
    id_tipo_afiliacion NUMBER(10) NOT NULL,
    CONSTRAINT id_afiliacion_pk PRIMARY KEY (id));

CREATE TABLE CIUDAD
    (codigo_postal NUMBER(6) NOT NULL,
    nombre VARCHAR2(80) NOT NULL,
    CONSTRAINT codigo_ciudad_pk PRIMARY KEY (codigo_postal));

CREATE TABLE TIPO_AFILIACION
    (id NUMBER(10)  NOT NULL,
    nombre VARCHAR2(30)  NOT NULL,
    beneficios VARCHAR2(1000) NOT NULL,
    CONSTRAINT id_tipo_afil_pk PRIMARY KEY (id));

CREATE TABLE CAJA_COMPENSACION
    (nit NUMBER(10) NOT NULL,
    nombre VARCHAR2(70) NOT NULL,
    telefono VARCHAR2(10) NOT NULL,
    CONSTRAINT nit_caja_pk PRIMARY KEY (nit));

-- En este punto deberia estar el uso o la creacion de constraints 
-- Crear un script aparte para la alteracion de constraints
--  El script se llama: Agregar_Constraints.sql

ALTER TABLE PERSONA 
ADD CONSTRAINT fk_de_tipo_persona FOREIGN KEY (tipo_documento) REFERENCES TIPO_IDENTIFICACION (id);

ALTER TABLE PERSONA
ADD CONSTRAINT fk_de_sexo_persona FOREIGN KEY (id_sexo) REFERENCES SEXO (id);

ALTER TABLE PERSONA
ADD CONSTRAINT fk_de_sangre_persona FOREIGN KEY (id_sangre) REFERENCES TIPO_SANGRE (id);

ALTER TABLE PERSONA
ADD CONSTRAINT fk_de_grupo_persona FOREIGN KEY (id_grupo) REFERENCES GRUPO_ETNICO (id);

ALTER TABLE PERSONA
ADD CONSTRAINT fk_de_comorbilidad_persona FOREIGN KEY (id_comorbilidad) REFERENCES COMORBILIDAD (id);

ALTER TABLE PERSONA
ADD CONSTRAINT fk_de_municipio_persona FOREIGN KEY (codigo_municipio) REFERENCES MUNICIPIO (codigo_postal);

ALTER TABLE MUNICIPIO
ADD CONSTRAINT fk_de_departamento_municipio FOREIGN KEY (id_departamento) REFERENCES DEPARTAMENTO (id);

ALTER TABLE PACIENTE 
ADD CONSTRAINT fk_de_persona_paciente FOREIGN KEY (id_persona) REFERENCES PERSONA (id);

ALTER TABLE CARNET_VACUNA
ADD CONSTRAINT fk_de_paciente_carnet FOREIGN KEY (id_paciente) REFERENCES PACIENTE (id);

ALTER TABLE AFILIACION
ADD CONSTRAINT fk_de_paciente_afiliacion FOREIGN KEY (id_paciente) REFERENCES PACIENTE (id);

ALTER TABLE AFILIACION
ADD CONSTRAINT fk_de_caja_afiliacion FOREIGN KEY (nit_caja) REFERENCES CAJA_COMPENSACION (nit);

ALTER TABLE AFILIACION
ADD CONSTRAINT fk_de_ciudad_afiliacion FOREIGN KEY (codigo_ciudad) REFERENCES CIUDAD (codigo_postal);

ALTER TABLE AFILIACION
ADD CONSTRAINT fk_de_tipo_afiliacion_afiliacion FOREIGN KEY (id_tipo_afiliacion) REFERENCES TIPO_AFILIACION (id);

ALTER TABLE EMPLEADO
ADD CONSTRAINT fk_de_persona_empleado FOREIGN KEY (id_persona) REFERENCES PERSONA (id);

ALTER TABLE EMPLEADO
ADD CONSTRAINT fk_de_cargo_empleado FOREIGN KEY (id_cargo) REFERENCES CARGO (id);

ALTER TABLE EMPLEADO
ADD CONSTRAINT fk_de_caja_empleado FOREIGN KEY (nit_caja) REFERENCES CAJA_COMPENSACION (nit);

ALTER TABLE PUNTO_VACUNACION
ADD CONSTRAINT fk_de_empleado_punto FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id);

ALTER TABLE INVENTARIO
ADD CONSTRAINT fk_de_lote_inventario FOREIGN KEY (id_lote) REFERENCES LOTE (id);

ALTER TABLE INVENTARIO
ADD CONSTRAINT fk_de_vacuna_inventario FOREIGN KEY (id_vacuna) REFERENCES VACUNA (id);

ALTER TABLE LOTE
ADD CONSTRAINT fk_de_punto_lote FOREIGN KEY (id_punto) REFERENCES PUNTO_VACUNACION(id);

ALTER TABLE LOTE 
ADD CONSTRAINT fk_de_transportadora FOREIGN KEY (id_transportadora) REFERENCES TRANSPORTADORA (id);

ALTER TABLE LOTE
ADD CONSTRAINT fk_de_avion_lote FOREIGN KEY (id_avion) REFERENCES AVION (id);

ALTER TABLE LOTE
ADD CONSTRAINT fk_de_fabricante_lote FOREIGN KEY (nit_fabricante) REFERENCES FABRICANTE (nit);

ALTER TABLE FABRICANTE
ADD CONSTRAINT fk_de_pais_fabricante FOREIGN KEY (id_pais) REFERENCES PAIS (id);

ALTER TABLE AEROLINEA
ADD CONSTRAINT fk_de_pais_aerolinea FOREIGN KEY (id_pais) REFERENCES PAIS (id);

ALTER TABLE AVION
ADD CONSTRAINT fk_de_aerolinea_avion FOREIGN KEY (nit_aerolinea) REFERENCES AEROLINEA (nit);

ALTER TABLE VACUNA
ADD CONSTRAINT fk_de_tipo_vacuna_vacuna FOREIGN KEY (id_tipo_vacuna) REFERENCES TIPO_VACUNA (id);

ALTER TABLE INFO_DOSIS
ADD CONSTRAINT fk_de_ips_info_dosis FOREIGN KEY (nit_ips) REFERENCES IPS(nit);

ALTER TABLE INFO_DOSIS
ADD CONSTRAINT fk_de_empleado_info_dosis FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id);

ALTER TABLE INFO_DOSIS
ADD CONSTRAINT fk_de_carnet_info_dosis FOREIGN KEY (id_carnet) REFERENCES CARNET_VACUNA(id);

ALTER TABLE INFO_DOSIS
ADD CONSTRAINT fk_de_inventario_info FOREIGN KEY (id_inventario) REFERENCES INVENTARIO (codigo);


-- Crear un script que inserte los datos de la tabla
-- Nombre del script es: "Insertar_Datos.sql"
INSERT ALL
	INTO TIPO_IDENTIFICACION (id,nombre) VALUES (1,'CEDULA CIUDADANIA')
	INTO TIPO_IDENTIFICACION (id,nombre) VALUES (2,'CEDULA EXTRANJERIA')
	INTO TIPO_IDENTIFICACION (id,nombre) VALUES (3,'TARJETA IDENTIDAD')
	INTO TIPO_IDENTIFICACION (id,nombre) VALUES (4,'PASAPORTE')
    INTO TIPO_IDENTIFICACION (id,nombre) VALUES (5,'REGISTRO CIVIL')
    SELECT * FROM DUAL;

INSERT ALL
	INTO TIPO_SANGRE (id,nombre) VALUES (1,'O+')
	INTO TIPO_SANGRE (id,nombre) VALUES (2,'O-')
	INTO TIPO_SANGRE (id,nombre) VALUES (3,'AB+')
	INTO TIPO_SANGRE (id,nombre) VALUES (4,'O+')
	INTO TIPO_SANGRE (id,nombre) VALUES (5,'A-')
	INTO TIPO_SANGRE (id,nombre) VALUES (6,'B+')
	INTO TIPO_SANGRE (id,nombre) VALUES (7,'O+')
	INTO TIPO_SANGRE (id,nombre) VALUES (8,'O-')
    SELECT *  FROM DUAL;

INSERT ALL
	INTO SEXO (id,nombre) VALUES (1,'MASCULINO')
	INTO SEXO (id,nombre) VALUES (2,'FEMENINO')
    SELECT * FROM DUAL;

INSERT ALL
	INTO COMORBILIDAD (id,nombre) VALUES (1,'DIABETES')
	INTO COMORBILIDAD (id,nombre) VALUES (2,'INSUFICIENCIA RENAL')
	INTO COMORBILIDAD (id,nombre) VALUES (3,'VIH')
	INTO COMORBILIDAD (id,nombre) VALUES (4,'ENFERMEDADES HIPERTENSIVAS')
	INTO COMORBILIDAD (id,nombre) VALUES (5,'CÁNCER')
	INTO COMORBILIDAD (id,nombre) VALUES (6,'TUBERCULOSIS')
	INTO COMORBILIDAD (id,nombre) VALUES (7,'EPOC')
	INTO COMORBILIDAD (id,nombre) VALUES (8,'ASMA')
	INTO COMORBILIDAD (id,nombre) VALUES (9,'OBESIDAD GRADO 1,2,3')
	INTO COMORBILIDAD (id,nombre) VALUES (10,'INSUFICIENCIA CARDIACA')
    SELECT * FROM DUAL;

INSERT ALL
	INTO DEPARTAMENTO (id,nombre) VALUES (1,'BOGOTÁ')
	INTO DEPARTAMENTO (id,nombre) VALUES (2,'CUNDINAMARCA')
	INTO DEPARTAMENTO (id,nombre) VALUES (3,'ARAUCA')
	INTO DEPARTAMENTO (id,nombre) VALUES (4,'ATLANTICO')
	INTO DEPARTAMENTO (id,nombre) VALUES (5,'ANTIOQUIA')
	INTO DEPARTAMENTO (id,nombre) VALUES (6,'BOYACÁ')
	INTO DEPARTAMENTO (id,nombre) VALUES (7,'CALDAS')
	INTO DEPARTAMENTO (id,nombre) VALUES (8,'CAQUETA')
	INTO DEPARTAMENTO (id,nombre) VALUES (9,'CASANARE')
	INTO DEPARTAMENTO (id,nombre) VALUES (10,'CAUCA')
    SELECT * FROM DUAL;

INSERT ALL
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (111176,'BOGOTÁ',1)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (251230,'GACHETÁ',2)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (53027,'YOLOMBÓ',3)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (80001,'BARRANQUILLA',4)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (51050,'BELLO',5)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (150461,'DUITAMA',6)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (173040,'MARQUETALIA',7)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (182010,'SAN VCTE DEL CAGUAN',8)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (850001,'YOPAL',9)
	INTO MUNICIPIO (codigo_postal,nombre,id_departamento) VALUES (190001,'POPAYÁN',10)
    SELECT * FROM DUAL;


INSERT ALL
	INTO GRUPO_ETNICO (id,nombre) VALUES (1,'MESTIZO')
	INTO GRUPO_ETNICO (id,nombre) VALUES (2,'CAUCÁSICO')
	INTO GRUPO_ETNICO (id,nombre) VALUES (3,'AFROCOLOMBIANO')
	INTO GRUPO_ETNICO (id,nombre) VALUES (4,'PALENQUERO')
	INTO GRUPO_ETNICO (id,nombre) VALUES (5,'GITANO')
	INTO GRUPO_ETNICO (id,nombre) VALUES (6,'INDIGENA')
    SELECT * FROM DUAL;

INSERT ALL
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (1,'ANDRÉS','ESTEBAN','AVILA','PAREDES','03/04/1997','ANDRESE.AVILAP@UTADEO.EDU.CO','CALLE 74 #78-01',2,3197390365,1,1,7,1,NULL,111176)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (2,'YARELY','VANESSA','CASTILLO','MELO','22/09/2003','YARELYV.CASTILLOM@UTADEO.EDU.CO','CALLE 34 SUR #73F-79',3,3232933212,1,1,7,2,2,251230)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (3,'JUAN','MIGUEL','RODRIGUEZ','PEREZ','02/09/1974','JUANMIROPE1974@GMAIL.COM','CALLE 136 #77-26',4,3004569587,2,2,8,1,NULL ,53027)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (4,'LEONARDO',NULL,'GUERRA',NULL,'13/09/1958','LEON.WAR@GMAIL.COM','CALLE 16 SUR #45-12',2,3169874564,3,1,5,3,3,80001)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (5,'ROSA','ADRIANA','LOPEZ','GONZALEZ','04/01/1984','ROSYLOPEZ.192@GMAIL.COM','CALLE 15 #19-26',2,3144489574,4,2,2,4,NULL,51050)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (6,'ANDREA',NULL,'ARANJUEZ','PÉREZ','23/05/1990','ANDREA0991@HOTMAIL.COM','CALLE 12 #01-16',1,3136985412,4,2,7,1,5,150461)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (7,'MANUEL',NULL,'GIRALDO','ARNAU','08/12/1995','MARNAU95@OUTLOOK.ES','CALLE 1 #13-47',2,3194745893,1,1,8,1,NULL,173040)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (8,'SANDRA','MILENA','GUTIERREZ','FERNANDEZ','28/02/1999','SANDRAM.GUTIERREZF@SENA.EDU.CO','CALLE 25 #74-15',3,3154849636,2,2,3,2,1,182010)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (9,'JORGE','ANDRÉS','JIMENEZ','PEDRAZA','15/07/1996','JORGANDRESJIMPE@GMAIL.COM','CALLE 16 #17-01',1,3169874564,1,1,7,3,NULL,850001)
	INTO PERSONA (id,nombre,segundo_nombre,apellido,segundo_apellido,fecha_nacimiento,email,direccion,estrato,telefono,tipo_documento,id_sexo,id_sangre,id_grupo,id_comorbilidad,codigo_municipio) VALUES (10,'JIMENA',NULL,'ROSALES',NULL,'06/08/1956','JIMENAROS1956@HOTMAIL.COM','CALLE 7 #79-41',3,3156068922,1,2,8,1,9,190001)
    SELECT * FROM DUAL;

INSERT ALL
	INTO CARGO (id,nombre) VALUES (1,'SUPERVISOR')
	INTO CARGO (id,nombre) VALUES (2,'ENFERMERA')
	INTO CARGO (id,nombre) VALUES (3,'MÉDICO GENERAL')
	INTO CARGO (id,nombre) VALUES (4,'PEDIATRA')
	INTO CARGO (id,nombre) VALUES (5,'AUXILIAR DE ENFERMERIA')
	SELECT * FROM DUAL;

INSERT ALL
	INTO CAJA_COMPENSACION (nit,nombre,telefono) VALUES (8600135703,'CAJA DE COMPENSACION FAMILIAR CAFAM','3077011')
	INTO CAJA_COMPENSACION (nit,nombre,telefono) VALUES (8600073361,'COLSUBSIDIO','6017447525')
	INTO CAJA_COMPENSACION (nit,nombre,telefono) VALUES (8600669427,'COMPENSAR','3077001')
	SELECT * FROM DUAL;

INSERT ALL
	INTO CIUDAD (codigo_postal, nombre) VALUES (111176,'BOGOTÁ')
	INTO CIUDAD (codigo_postal, nombre) VALUES (80001,'BARRANQUILLA')
	INTO CIUDAD (codigo_postal, nombre) VALUES (51050,'BELLO')
	INTO CIUDAD (codigo_postal, nombre) VALUES (810001,'ARAUCA')
	INTO CIUDAD (codigo_postal, nombre) VALUES (850001,'YOPAL')
	SELECT * FROM DUAL;

INSERT ALL
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (12000001,'CATEGORIA A','GARANTIZAMOS LA INTEGRALIDAD DE LOS SERVICIOS DE SALUD, A TRAVÉS DE UN MODELO DE ATENCIÓN ENFOCADO EN LAS NECESIDADES Y EL CICLO VITAL DE NUESTROS USUARIOS.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (12000002,'CATEGORIA B','GARANTIZAMOS LA INTEGRALIDAD DE LOS SERVICIOS DE SALUD, A TRAVÉS DE UN MODELO DE ATENCIÓN ENFOCADO EN LAS NECESIDADES Y EL CICLO VITAL DE NUESTROS USUARIOS.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (12000003,'CATEGORIA C','GARANTIZAMOS LA INTEGRALIDAD DE LOS SERVICIOS DE SALUD, A TRAVÉS DE UN MODELO DE ATENCIÓN ENFOCADO EN LAS NECESIDADES Y EL CICLO VITAL DE NUESTROS USUARIOS.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (12000004,'CATEGORIA D','GARANTIZAMOS LA INTEGRALIDAD DE LOS SERVICIOS DE SALUD, A TRAVÉS DE UN MODELO DE ATENCIÓN ENFOCADO EN LAS NECESIDADES Y EL CICLO VITAL DE NUESTROS USUARIOS.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (13000001,'TIPO A','EN COLSUBSIDIO ESTAMOS COMPROMETIDOS CON LA PREVENCIÓN Y EL CUIDADO DE LA SALUD DE LAS PERSONAS MEDIANTE LA PRESTACIÓN DE SERVICIOS A TODO EL GRUPO FAMILIAR. BRINDANDO ATENCIÓN MÉDICA HUMANIZADA Y DE CALIDAD, EN SEDES QUE CUENTAN CON TECNOLOGÍA DE PUNTA E INFRAESTRUCTURA MODERNA CON EL FIN DE DAR A NUESTROS USUARIOS UNA MEJOR CALIDAD DE VIDA.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (13000002,'TIPO B','EN COLSUBSIDIO ESTAMOS COMPROMETIDOS CON LA PREVENCIÓN Y EL CUIDADO DE LA SALUD DE LAS PERSONAS MEDIANTE LA PRESTACIÓN DE SERVICIOS A TODO EL GRUPO FAMILIAR. BRINDANDO ATENCIÓN MÉDICA HUMANIZADA Y DE CALIDAD, EN SEDES QUE CUENTAN CON TECNOLOGÍA DE PUNTA E INFRAESTRUCTURA MODERNA CON EL FIN DE DAR A NUESTROS USUARIOS UNA MEJOR CALIDAD DE VIDA.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (13000003,'TIPO C','EN COLSUBSIDIO ESTAMOS COMPROMETIDOS CON LA PREVENCIÓN Y EL CUIDADO DE LA SALUD DE LAS PERSONAS MEDIANTE LA PRESTACIÓN DE SERVICIOS A TODO EL GRUPO FAMILIAR. BRINDANDO ATENCIÓN MÉDICA HUMANIZADA Y DE CALIDAD, EN SEDES QUE CUENTAN CON TECNOLOGÍA DE PUNTA E INFRAESTRUCTURA MODERNA CON EL FIN DE DAR A NUESTROS USUARIOS UNA MEJOR CALIDAD DE VIDA.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (13000004,'TIPO D','EN COLSUBSIDIO ESTAMOS COMPROMETIDOS CON LA PREVENCIÓN Y EL CUIDADO DE LA SALUD DE LAS PERSONAS MEDIANTE LA PRESTACIÓN DE SERVICIOS A TODO EL GRUPO FAMILIAR. BRINDANDO ATENCIÓN MÉDICA HUMANIZADA Y DE CALIDAD, EN SEDES QUE CUENTAN CON TECNOLOGÍA DE PUNTA E INFRAESTRUCTURA MODERNA CON EL FIN DE DAR A NUESTROS USUARIOS UNA MEJOR CALIDAD DE VIDA.')
	INTO TIPO_AFILIACION (id,nombre,beneficios) VALUES (14000001,'BÁSICO','EL PBS ES EL PLAN DE BENEFICIOS EN SALUD DEL RÉGIMEN CONTRIBUTIVO. CONJUNTO BÁSICO DE SERVICIOS DE SALUD QUE LAS ENTIDADES PROMOTORAS DE SALUD (EPS), DEBEN PRESTAR A SUS AFILIADOS, SIEMPRE Y CUANDO ESTOS CUMPLAN LAS OBLIGACIONES ESTABLECIDAS PARA TAL EFECTO. COMPENSAR EPS MARCA LA DIFERENCIA POR LA CALIDAD DE SU MODELO DE ATENCIÓN, PRESTACIÓN DE SERVICIOS, RED DE INSTITUCIONES Y PROFESIONALES INSCRITOS.')
	SELECT * FROM DUAL;

INSERT ALL
	INTO TRANSPORTADORA (id,nombre,email,telefono,costo) VALUES (101,'FEDEX','TRACK@FEDEX.COM','6012910100',10000000)
	INTO TRANSPORTADORA (id,nombre,email,telefono,costo) VALUES (102,'UPS','CONTACTCENTER@UPS.COM','018007522293',20000000)
	INTO TRANSPORTADORA (id,nombre,email,telefono,costo) VALUES (103,'DHL','SERVICE@DHL','+1 317-554-5191',25000000)
	INTO TRANSPORTADORA (id,nombre,email,telefono,costo) VALUES (104,'AVIANCA','SERVICIOAVIANCA@AVIANCA.COM','(1)40134340',11000000)
	INTO TRANSPORTADORA (id,nombre,email,telefono,costo) VALUES (105,'KLM','TRACKING@KLM.COM','6016506000',12000000)
	SELECT * FROM DUAL;

INSERT ALL
	INTO PAIS (id,nombre) VALUES (1,'INGLATERRA')
	INTO PAIS (id,nombre) VALUES (2,'ALEMANIA')
	INTO PAIS (id,nombre) VALUES (3,'ESTADOS UNIDOS')
	INTO PAIS (id,nombre) VALUES (4,'CHINA')
	INTO PAIS (id,nombre) VALUES (5,'FRANCIA')
	INTO PAIS (id,nombre) VALUES (6,'ESPAÑA')
	INTO PAIS (id,nombre) VALUES (7,'RUSIA')
	INTO PAIS (id,nombre) VALUES (8,'COLOMBIA')
	INTO PAIS (id,nombre) VALUES (9,'PANAMA')
	SELECT * FROM DUAL;

INSERT ALL
	INTO TIPO_VACUNA (id,nombre,descripcion) VALUES (1,'ARNM','EN ESTE TIPO DE VACUNA SE USA ARNM GENÉTICAMENTE MODIFICADO PARA BRINDAR A TUS CÉLULAS INSTRUCCIONES SOBRE CÓMO PRODUCIR LA PROTEÍNA DE LA ESPÍCULA QUE SE ENCUENTRA EN LA SUPERFICIE DEL VIRUS DE LA COVID-19.DESPUÉS DE LA VACUNACIÓN, LAS CÉLULAS MUSCULARES COMIENZAN A PRODUCIR LAS PARTES DE LA PROTEÍNA DE LA ESPÍCULA Y A UBICARLAS EN LA SUPERFICIE DE LAS CÉLULAS. ESTO HACE QUE EL ORGANISMO PRODUZCA ANTICUERPOS. SI MÁS TARDE TE INFECTAS CON EL VIRUS DE LA COVID-19, ESTOS ANTICUERPOS COMBATIRÁN EL VIRUS.INMEDIATAMENTE DESPUÉS DE ENTREGAR LAS INSTRUCCIONES, EL ARNM SE DIVIDE. NUNCA INGRESA AL NÚCLEO DE LAS CÉLULAS, DONDE SE ALMACENA TU ADN. TANTO LA VACUNA CONTRA LA COVID-19 DE PFIZER-BIONTECH COMO LA DE MODERNA UTILIZAN ARNM.')
	INTO TIPO_VACUNA (id,nombre,descripcion) VALUES (2,'VECTOR VIRAL','EN ESTE TIPO DE VACUNA, EL MATERIAL GENÉTICO DEL VIRUS DE LA COVID-19 SE COLOCA EN UNA VERSIÓN MODIFICADA DE UN VIRUS DIFERENTE (VECTOR VIRAL). CUANDO EL VECTOR VIRAL INGRESA A LAS CÉLULAS, ENTREGA EL MATERIAL GENÉTICO DEL VIRUS DE LA COVID-19 QUE BRINDA INSTRUCCIONES A LAS CÉLULAS PARA HACER COPIAS DE LA PROTEÍNA DE LA ESPÍCULA. UNA VEZ QUE LAS CÉLULAS MUESTRAN LAS PROTEÍNAS DE LA ESPÍCULA EN LA SUPERFICIE, EL SISTEMA INMUNITARIO RESPONDE Y CREA ANTICUERPOS Y GLÓBULOS BLANCOS DE DEFENSA. SI MÁS ADELANTE TE INFECTAS CON EL VIRUS DE LA COVID-19, LOS ANTICUERPOS COMBATIRÁN EL VIRUS. LAS VACUNAS DE VECTOR VIRAL NO PUEDEN HACER QUE TE INFECTES CON EL VIRUS DE LA COVID-19 NI CON EL VIRUS DEL VECTOR VIRAL. A SU VEZ, EL MATERIAL GENÉTICO QUE PROPORCIONAN NO SE VUELVE PARTE DE TU ADN. LA VACUNA DE JANSSEN DE JOHNSON JOHNSON CONTRA LA COVID-19 ES UNA VACUNA DE VECTOR VIRAL. ASTRAZENECA Y LA UNIVERSIDAD DE OXFORD TAMBIÉN TIENEN UNA VACUNA DE VECTOR VIRAL CONTRA LA COVID-19.')
	INTO TIPO_VACUNA (id,nombre,descripcion) VALUES (3,'SUBUNID PROTEICAS','LAS VACUNAS DE SUBUNIDADES SOLO INCLUYEN LAS PARTES DE UN VIRUS QUE MÁS ESTIMULAN EL SISTEMA INMUNITARIO. ESTE TIPO DE VACUNA CONTRA LA COVID-19 CONTIENE PROTEÍNAS DE LA ESPÍCULA INOFENSIVAS. UNA VEZ QUE EL SISTEMA INMUNITARIO RECONOCE LAS PROTEÍNAS DE LA ESPÍCULA, CREA ANTICUERPOS Y GLÓBULOS BLANCOS DE DEFENSA. SI MÁS TARDE TE INFECTAS CON EL VIRUS DE LA COVID-19, LOS ANTICUERPOS COMBATIRÁN EL VIRUS. NOVAVAX ESTÁ TRABAJANDO EN UNA VACUNA CONTRA LA COVID-19 DE SUBUNIDADES PROTEICAS.')
	SELECT * FROM DUAL;

INSERT ALL
	INTO IPS (nit,nombre,direccion_principal) VALUES (101,'FUNDACIÓN CLÍNICA SHAIO','DIAGONAL 115A # 70C-75')
	INTO IPS (nit,nombre,direccion_principal) VALUES (102,'HOSPITAL SAN FRANCISCO','CARRERA 8# 6A-121')
	INTO IPS (nit,nombre,direccion_principal) VALUES (103,'PROTECCION INTEGRAL IPS SAS','CALLE 15# 22-34')
	INTO IPS (nit,nombre,direccion_principal) VALUES (104,'BIENESTAR IPS SAS','CARRERA 57# 72-107')
	INTO IPS (nit,nombre,direccion_principal) VALUES (105,'IPS A PRUEBA','DIAGONAL 50A# 42-95')
	SELECT * FROM DUAL;

INSERT ALL
	INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) VALUES (1001,'12/08/2014',1000000,6,1,8600135703)
	INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) VALUES (1002,'16/02/2020',5000000,7,3,8600073361)
	INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) VALUES (1003,'25/04/2011',5500000,3,3,8600135703)
	INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) VALUES (1004,'16/10/2019',2000000,8,2,8600135703)
	INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) VALUES (1005,'02/06/2008',1890000,9,4,8600669427)
	SELECT * FROM DUAL;

INSERT ALL
	INTO PACIENTE (id,id_persona) VALUES (100001,1)
	INTO PACIENTE (id,id_persona) VALUES (100002,2)
	INTO PACIENTE (id,id_persona) VALUES (100003,3)
	INTO PACIENTE (id,id_persona) VALUES (100004,4)
	INTO PACIENTE (id,id_persona) VALUES (100005,5)
	SELECT * FROM DUAL;

INSERT ALL
	INTO VACUNA(id,nombre,beneficios,riesgos,id_tipo_vacuna) VALUES (1,'ASTRAZENECA','LA EFICACIA DE LA VACUNA CONTRA LA INFECCIÓN SINTOMÁTICA POR EL SARS-COV-2 FUE DEL 76%, SI BIEN ESTE PORCENTAJE SE REFIERE ESPECÍFICAMENTE A LOS EVENTOS QUE SE PRODUCEN A PARTIR DEL 15.º DÍA TRAS LA SEGUNDA DOSIS, CON UN INTERVALO ENTRE DOSIS DE 29 DÍAS.','LOS EFECTOS SECUNDARIOS NOTIFICADOS DE MANERA MÁS FRECUENTE EN LOS ENSAYOS CLÍNICOS FUERON LA SENSIBILIDAD EN EL LUGAR DE LA INYECCIÓN (63,8%), DOLOR EN EL LUGAR DE LA INYECCIÓN (54,3%), CEFALEA (52,7%), FATIGA (53,0%), MIALGIA (43,9%), MALESTAR (44,4%), PIREXIA (INCLUYE SENSACIÓN DE FIEBRE (33,5%) Y FIEBRE ≥38°C (7,6%), ESCALOFRÍOS (32,2%), ARTRALGIA (26,6%), Y NÁUSEAS (22,2%), TENIENDO EN CUENTA QUE LA MAYORÍA DE LOS CASOS FUERON DE INTENSIDAD LEVE A MODERADA. REACCIONES MÁS LEVES Y MENOS FRECUENTES TRAS LA INOCULACIÓN DE LA SEGUNDA DOSIS.',2)
	INTO VACUNA(id,nombre,beneficios,riesgos,id_tipo_vacuna) VALUES (2,'PFIZER','EN LOS ENSAYOS CLÍNICOS, LA VACUNA DE PFIZER-BIONTECH TUVO UNA EFICACIA DE >90 % PARA PREVENIR INFECCIONES POR COVID-19 CONFIRMADAS EN LABORATORIO EN NIÑOS DE 5 A 15 AÑOS, Y LA RESPUESTA INMUNITARIA EN NIÑOS DE 5 A 15 AÑOS FUE AL MENOS IGUAL DE POTENTE QUE LA RESPUESTA INMUNITARIA EN PERSONAS DE 16 A 25 AÑOS. EN LOS ENSAYOS CLÍNICOS, LA VACUNA TAMBIÉN TUVO UNA EFICACIA DE >90 % PARA PREVENIR EL COVID-19 EN PERSONAS DE DIFERENTES CATEGORÍAS DE EDAD, SEXO, RAZA Y ETNIA, Y EN PERSONAS CON AFECCIONES SUBYACENTES.','EN EL BRAZO DONDE RECIBIÓ LA VACUNA INYECTABLE: DOLOR, ENROJECIMIENTO, HINCHAZÓN. EN EL RESTO DEL CUERPO: CANSANCIO, DOLOR DE CABEZA, DOLOR MUSCULAR, ESCALOFRÍOS, FIEBRE, NÁUSEAS.',1)
	INTO VACUNA(id,nombre,beneficios,riesgos,id_tipo_vacuna) VALUES (3,'JOHNSON','POR CADA MILLÓN DE DOSIS ADMINISTRADAS A MUJERES DE 30 A 49 AÑOS, LOS DATOS SUGIEREN QUE SE PODRÍAN PREVENIR 10.100 CASOS DE COVID-19 Y 20 MUERTES EN COMPARACIÓN CON EL RIESGO DE ALREDEDOR DE SEIS A SIETE CASOS DE SGB. PARA LOS HOMBRES DE ESE GRUPO DE EDAD, SE PODRÍAN PREVENIR 7.600 CASOS DE COVID-19 Y 25 MUERTES EN COMPARACIÓN CON EL RIESGO DE ALREDEDOR DE SIETE A OCHO CASOS DE SGB, SEGÚN LOS DATOS DE LOS CDC. POR CADA MILLÓN DE DOSIS ADMINISTRADAS A MUJERES DE 50 A 64 AÑOS, LOS DATOS SUGIEREN QUE SE PODRÍAN PREVENIR 12.100 CASOS DE COVID-19 Y 120 MUERTES EN COMPARACIÓN CON EL RIESGO DE SIETE A OCHO CASOS DE SGB. ENTRE LOS HOMBRES, LA VACUNA EVITARÍA ALREDEDOR DE 10.100 CASOS DE COVID-19 Y 140 MUERTES Y CONLLEVARÍA EL RIESGO DE ENTRE 14 Y 17 CASOS DE SGB, SEGÚN LOS DATOS DE LOS CDC.','EN EL BRAZO DONDE RECIBIÓ LA VACUNA INYECTABLE: DOLOR, ENROJECIMIENTO, HINCHAZÓN. EN EL RESTO DEL CUERPO: CANSANCIO, DOLOR DE CABEZA, DOLOR MUSCULAR, ESCALOFRÍOS, FIEBRE, NÁUSEAS.',2)
	INTO VACUNA(id,nombre,beneficios,riesgos,id_tipo_vacuna) VALUES (4,'SINOVAC','LA EFICACIA ESTIMADA DE LA VACUNA CORONAVAC DE SINOVAC CONTRA LA INFECCIÓN SINTOMÁTICA FUE DEL 49,6% (4). TAMBIÉN SE DEMOSTRÓ QUE LA VACUNA ES EFICAZ EN UN ESTUDIO OBSERVACIONAL REALIZADO EN SAO PAULO (BRASIL), DONDE CIRCULABA TAMBIÉN LA VARIANTE P. 1 (SE DETECTÓ EN EL 83% DE LAS MUESTRAS)','EN EL BRAZO DONDE RECIBIÓ LA VACUNA INYECTABLE: DOLOR, ENROJECIMIENTO, HINCHAZÓN. EN EL RESTO DEL CUERPO: CANSANCIO, DOLOR DE CABEZA, DOLOR MUSCULAR, ESCALOFRÍOS, FIEBRE, NÁUSEAS.',3)
	INTO VACUNA(id,nombre,beneficios,riesgos,id_tipo_vacuna) VALUES (5,'MODERNA','EN UN ENSAYO CLÍNICO EN CURSO, SE HA DEMOSTRADO QUE LA VACUNA CONTRA LA COVID-19 DE MODERNA PREVIENE LA COVID-19 DESPUÉS DE RECIBIR 2 DOSIS CON 1 MES DE DIFERENCIA. SE DESCONOCE ACTUALMENTE CUÁNTO TIEMPO DURA LA PROTECCIÓN CONTRA LA COVID-19.','EN EL BRAZO DONDE RECIBIÓ LA VACUNA INYECTABLE: DOLOR, ENROJECIMIENTO, HINCHAZÓN. EN EL RESTO DEL CUERPO: CANSANCIO, DOLOR DE CABEZA, DOLOR MUSCULAR, ESCALOFRÍOS, FIEBRE, NÁUSEAS.',1)
	SELECT * FROM DUAL;

INSERT ALL
	INTO AEROLINEA (nit,nombre,id_pais) VALUES (8901005776,'AVIANCA',8)
	INTO AEROLINEA (nit,nombre,id_pais) VALUES (8600253382,'COPA AIRLINES',9)
	INTO AEROLINEA (nit,nombre,id_pais) VALUES (8401254365,'ATLAS AIR',3)
	INTO AEROLINEA (nit,nombre,id_pais) VALUES (8500283312,'FEDEX EXPRESS',3)
	INTO AEROLINEA (nit,nombre,id_pais) VALUES (8900213358,'JETBLUE AIRWAYS',3)
	SELECT * FROM DUAL;

INSERT ALL
	INTO FABRICANTE (nit,nombre,direccion_principal,email,telefono,costo,id_pais) VALUES (8300395681,'ASTRAZENECA','CARRERA 7 # 71-21','PATIENTSAFETYCOLOMBIA@ASTRAZENECA.COM','01-800-0111561',30000000,1)
	INTO FABRICANTE (nit,nombre,direccion_principal,email,telefono,costo,id_pais) VALUES (8600395611,'PFIZER','TV. 55 #95-66','COL.AEREPORTING@PFIZER.COM','(1)6002300',40000000,2)
	INTO FABRICANTE (nit,nombre,direccion_principal,email,telefono,costo,id_pais) VALUES (8901018159,'JOHNSON JOHNSON','CALLE 26 #69-76','CONSUMIDOR@CONCO.JNJ.COM','(1)3441315',50000000,3)
	INTO FABRICANTE (nit,nombre,direccion_principal,email,telefono,costo,id_pais) VALUES (1673331996,'SINOVAC','PEKIN,CHINA','PR@SINOVAC.COM','+86-10-8279-93051',31000000,4)
	INTO FABRICANTE (nit,nombre,direccion_principal,email,telefono,costo,id_pais) VALUES (7068363145,'MODERNA','CARRERA 20 # 72-13','IR@MODERNATX.COM','1-866-663-3762',45000000,3)
	SELECT * FROM DUAL;

INSERT ALL
	INTO AFILIACION (id,fecha_inicio,id_paciente,nit_caja,codigo_ciudad,id_tipo_afiliacion) VALUES (10000001,'12/09/2009',100001,8600135703,111176,12000001)
	INTO AFILIACION (id,fecha_inicio,id_paciente,nit_caja,codigo_ciudad,id_tipo_afiliacion) VALUES (10000002,'06/12/2013',100002,8600073361,111176,13000001)
	INTO AFILIACION (id,fecha_inicio,id_paciente,nit_caja,codigo_ciudad,id_tipo_afiliacion) VALUES (10000003,'21/04/2010',100003,8600669427,810001,14000001)
	INTO AFILIACION (id,fecha_inicio,id_paciente,nit_caja,codigo_ciudad,id_tipo_afiliacion) VALUES (10000004,'19/10/2016',100004,8600073361,80001,13000002)
	INTO AFILIACION (id,fecha_inicio,id_paciente,nit_caja,codigo_ciudad,id_tipo_afiliacion) VALUES (10000005,'25/02/2007',100005,8600135703,850001,12000002)
	SELECT * FROM DUAL;

INSERT ALL
	INTO PUNTO_VACUNACION (id,direccion,id_empleado) VALUES (1,'CALLE 24# 12-15 COLEGIO GIRARDOT',1001)
	INTO PUNTO_VACUNACION (id,direccion,id_empleado) VALUES (2,'CALLE 22# 05-15 UNIVERSIDAD JTL',1002)
	INTO PUNTO_VACUNACION (id,direccion,id_empleado) VALUES (3,'CALLE 10 CENTRO YOLOMBÓ',1003)
	INTO PUNTO_VACUNACION (id,direccion,id_empleado) VALUES (4,'CENTRO COMERCIAL UNILAGO',1004)
	INTO PUNTO_VACUNACION (id,direccion,id_empleado) VALUES (5,'CENTRO COMERCIAL GRAN ESTACION',1005)
	SELECT * FROM DUAL;

INSERT ALL
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (1,'AIRBUS 319',10000000,'11/04/2021','15/04/2021',8901005776)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (2,'AIRBUS 320',12000000,'13/04/2021','16/04/2021',8600253382)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (3,'AIRBUS 321',20000000,'16/04/2021','18/04/2021',8401254365)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (4,'BOEING 737',22000000,'20/04/2021','22/04/2021',8500283312)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (5,'BOEING 747',10000000,'24/04/2021','28/04/2021',8900213358)
    INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (6,'BOEING 747 F FREIGHTER',10000000,'28/04/2021','30/04/2021',8900213358)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (7,'AIRBUS 300-600 ST',12000000,'01/05/2021','04/05/2021',8500283312)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (8,'BOEING 777-200',20000000,'05/05/2021','07/05/2021',8401254365)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (9,'AIRBUS 330',22000000,'08/05/2021','09/05/2021',8600253382)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (10,'AIRBUS 340',10000000,'10/05/2021','11/05/2021',8901005776)
    INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (11,'BOEING 747-400 ERF',10000000,'11/05/2021','12/05/2021',8901005776)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (12,'AIRBUS 319',12000000,'13/05/2021','14/05/2021',8600253382)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (13,'AIRBUS 321',20000000,'15/05/2021','18/05/2021',8401254365)
	INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (14,'BOEING 747',22000000,'22/06/2021','23/06/2021',8500283312)
    INTO AVION (id,nombre,costo_uso,fecha_vuelo,fecha_llegada,nit_aerolinea) VALUES (15,'AIRBUS 321',25000000,'14/07/2021','15/07/2021',8901005776)
	SELECT * FROM DUAL;

INSERT ALL
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (01,'INGLATERRA','12/05/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (02,'ALEMANIA','10/01/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (03,'ESTADOS UNIDOS','10/11/2022','ACABADO',3,105,3,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (04,'ESTADOS UNIDOS','10/12/2022','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (05,'ESTADOS UNIDOS','20/12/2023','USANDOSE',5,101,5,7068363145)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (06,'INGLATERRA','01/02/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (07,'ALEMANIA','03/06/2025','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (08,'ALEMANIA','13/08/2024','GUARADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (09,'ALEMANIA','24/04/2023','USANDOSE',2,105,4,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (10,'INGLATERRA','30/08/2025','GUARDADO',5,101,5,8300395681)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (11,'INGLATERRA','13/07/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (12,'ALEMANIA','08/12/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (13,'ALEMANIA','16/11/2022','ACABADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (14,'ESTADOS UNIDOS','10/12/2023','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (15,'ESTADOS UNIDOS','03/09/2023','USANDOSE',5,101,5,7068363145)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (16,'INGLATERRA','12/05/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (17,'ALEMANIA','10/01/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (18,'ESTADOS UNIDOS','10/11/2022','ACABADO',3,105,3,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (19,'ESTADOS UNIDOS','10/12/2022','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (20,'ESTADOS UNIDOS','20/12/2023','USANDOSE',5,101,5,7068363145)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (21,'INGLATERRA','01/02/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (22,'ALEMANIA','03/06/2025','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (23,'ALEMANIA','13/08/2024','GUARADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (24,'ALEMANIA','24/04/2023','USANDOSE',2,105,4,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (25,'INGLATERRA','30/08/2025','GUARDADO',5,101,5,8300395681)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (26,'INGLATERRA','13/07/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (27,'ALEMANIA','08/12/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (28,'ALEMANIA','16/11/2022','ACABADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (29,'ESTADOS UNIDOS','10/12/2023','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (30,'ESTADOS UNIDOS','03/09/2023','USANDOSE',5,101,5,7068363145)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (01,'INGLATERRA','12/05/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (02,'ALEMANIA','10/01/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (03,'ESTADOS UNIDOS','10/11/2022','ACABADO',3,105,3,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (04,'ESTADOS UNIDOS','10/12/2022','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (05,'ESTADOS UNIDOS','20/12/2023','USANDOSE',5,101,5,7068363145)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (06,'INGLATERRA','01/02/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (07,'ALEMANIA','03/06/2025','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (08,'ALEMANIA','13/08/2024','GUARADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (09,'ALEMANIA','24/04/2023','USANDOSE',2,105,4,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (10,'INGLATERRA','30/08/2025','GUARDADO',5,101,5,8300395681)
    INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (11,'INGLATERRA','13/07/2024','GUARDADO',1,101,1,8300395681)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (12,'ALEMANIA','08/12/2026','GUARDADO',2,102,2,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (13,'ALEMANIA','16/11/2022','ACABADO',3,105,3,8600395611)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (14,'ESTADOS UNIDOS','10/12/2023','ACABADO',2,105,4,8901018159)
	INTO LOTE (id,lugar_origen,fecha_vencimiento,id_punto,id_transportadora,id_avion,nit_fabricante) VALUES (15,'ESTADOS UNIDOS','03/09/2023','USANDOSE',5,101,5,7068363145)
	SELECT * FROM DUAL;
	
INSERT ALL
	INTO INVENTARIO (codigo,estado,id_lote,id_vacuna) VALUES (10000001,'CORRECTO',01,1)
	INTO INVENTARIO (codigo,estado,id_lote,id_vacuna) VALUES (10000002,'CORRECTO',02,2)
	INTO INVENTARIO (codigo,estado,id_lote,id_vacuna) VALUES (10000003,'CORRECTO',03,3)
	INTO INVENTARIO (codigo,estado,id_lote,id_vacuna) VALUES (10000004,'CORRECTO',04,3)
	INTO INVENTARIO (codigo,estado,id_lote,id_vacuna) VALUES (10000005,'CORRECTO',05,5)
	SELECT * FROM DUAL;

INSERT ALL
	INTO CARNET_VACUNA (id,id_paciente) VALUES (1,100001)
	INTO CARNET_VACUNA (id,id_paciente) VALUES (2,100002)
	INTO CARNET_VACUNA (id,id_paciente) VALUES (3,100003)
	INTO CARNET_VACUNA (id,id_paciente) VALUES (4,100004)
	INTO CARNET_VACUNA (id,id_paciente) VALUES (5,100005)
	SELECT * FROM DUAL;

INSERT ALL
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (001,1,'14/09/2021',101,1001,10000001,1)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (002,1,'16/12/2021',102,1002,10000002,2)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (003,1,'15/12/2021',103,1002,10000003,3)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (004,2,'15/03/2022',103,1004,10000004,2)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (005,1,'08/08/2021',104,1003,10000005,4)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (006,1,'15/03/2022',105,1004,10000001,5)
	INTO INFO_DOSIS (id,dosis,fecha,nit_ips,id_empleado,id_inventario,id_carnet) VALUES (007,2,'15/05/2022',105,1004,10000004,1)
	SELECT * FROM DUAL;
-- Vistas del proyecto 

-- Nombre del script: "Vistas_Simples.sql"
-- Ver las personas que tengan cedula de ciudadania
CREATE VIEW PERSONA_CEDULA
AS SELECT id,nombre,apellido,direccion,telefono,tipo_documento
FROM persona
WHERE tipo_documento = 1;

-- Ver vacunas que sean de tipo vector viral
CREATE VIEW VACUNAS_VV
AS SELECT id,nombre
FROM vacuna
WHERE id_tipo_vacuna = 2;

-- Nombre del script: "Vistas_Complejas.sql"
-- Ver personas y sus departamentos y municipio

CREATE VIEW PERSONA_DEPARTAMENTO
(id,persona,departamento,municipio)
AS SELECT p.id,CONCAT(CONCAT(p.nombre,' '),p.apellido),d.nombre,m.nombre
FROM persona p,departamento d,municipio m
WHERE m.id_departamento = d.id AND p.codigo_municipio = m.codigo_postal;

-- Ver el empleado que mas gana y mostrar la caja a la que pertenece

CREATE VIEW EMPLEADO_CAJA
(Nombre, Caja, ID, Salario)
AS SELECT p.nombre, c.nombre, e.id, e.salario 
FROM empleado e, persona p, caja_compensacion c
WHERE e.id_persona = p.id AND e.nit_caja = c.nit AND e.salario = (SELECT MAX(salario) FROM empleado);

-- Salario promedio de los empleados segun las cajas

CREATE VIEW CAJA_EMPLEADO_AVG
(caja,salario)
AS SELECT c.nombre, AVG(e.salario)
FROM empleado e, caja_compensacion c
WHERE e.nit_caja = c.nit
GROUP BY c.nombre;
-- Que nos muestre el lote con el mayor costo por parte del fabricante y el avion que lo transporto

CREATE VIEW LOTE_CARO
(id, Fecha_vencimiento, Fabricante, Costo_Fabricarlo, Avion)
AS SELECT l.id,l.fecha_vencimiento,f.nombre,f.costo,a.nombre
FROM lote l, fabricante f, avion a
WHERE l.nit_fabricante = f.nit AND l.id_avion = a.id  AND f.costo = (SELECT MAX(costo) FROM fabricante);

-- Vista de lote, inventario y vacuna para el medicoVacunacion

CREATE VIEW LOTE_VACUNA
(Id_Lote, Id_Inventario, Nombre_Vacuna, Fecha_Vencimiento, Estado )
AS SELECT l.id, i.codigo, v.nombre, l.fecha_vencimiento, i.estado
FROM lote l, inventario i, vacuna v
WHERE l.id = i.id_lote AND v.id = i.id_vacuna;

-- Ver info del paciente  

CREATE VIEW PACIENTE_INFO
(Documento,Nombre,Apellido,idCarnet,idDosis,numeroDosis,fechaDosis,NumEmpleado)
AS SELECT p.id,p.nombre,p.apellido,cv.id,indo.id,indo.dosis,indo.fecha,indo.id_empleado
FROM persona p,carnet_vacuna cv,info_dosis indo,paciente pa
WHERE p.id = pa.id_persona AND pa.id = cv.id_paciente AND cv.id = indo.id_carnet;

-- -- Estas vistas no se utilizaron!!!!!!!!!! <<<<<<<<------ !!!!!!

-- CREATE VIEW VACUNA_COSTOFABRICANTE
-- (nombre, tipo, nombre_fabricante, mincosto, maxcosto, avgcosto)
-- AS SELECT v.nombre, t.nombre, f.nombre, MIN(f.costo), MAX(f.costo), AVG(f.costo)
-- FROM vacuna v, tipo_vacuna t, fabricante f, inventario i, lote l
-- WHERE v.id_tipo_vacuna = t.id AND v.id = i.id_vacuna AND i.id_lote = l.id AND l.nit_fabricante = f.nit 
-- GROUP BY v.nombre, t.nombre, f.nombre;

-- -- Muestra el maximo numero de dosis que lleva hasta la fecha.

-- CREATE VIEW  PERSONA_DOSIS
-- (Id_Paciente, Nombre, Vacuna, Num_Dosis)
-- AS SELECT  p.id, n.nombre, v.nombre, MAX( i.dosis)
-- FROM   paciente p, persona n, vacuna v, info_dosis i, carnet_vacuna c, inventario e
-- WHERE  n.id = p.id_persona AND p.id = c.id_paciente AND c.id = i.id_carnet AND e.id_vacuna = v.id AND i.id_inventario = e.codigo 
-- GROUP BY  p.id, n.nombre, v.nombre;



-- Secuencias, Indices y Sinonimos del proyecto
-- Nombre del script: "S_I_S.sql"

-- Secuencias

-- Para persona
CREATE SEQUENCE id_perid
        INCREMENT BY 1
        START WITH 11
        MAXVALUE 50000000
        NOCACHE
        NOCYCLE;

-- No se crea secuencia de tipo de identificación ya que el tipo de identificaciones existentes son limitados.

-- No se crea secuencia de sexo ya que el tipo de sexos es limitado.

-- No se crea sequencia de tipo de sangre puesto que los tipos de sangre son limitados.

-- Para las comorbilidades
CREATE SEQUENCE id_comorbid
        INCREMENT BY 1
        START WITH 11
        MAXVALUE 99
        NOCACHE
        NOCYCLE;

-- No se crea secuencia de Municipio, ya que los números de identificación varían según la locación y no siguen una secuencia.    

-- Para departamento
CREATE SEQUENCE dept_deptid
        INCREMENT BY 1
        START WITH 11
        MAXVALUE 32
        NOCACHE
        NOCYCLE;

-- No se crea secuencia de grupo etnico, puesto que los grupos etnicos son limitados.
    
-- Para empleado
CREATE SEQUENCE emp_empid
        INCREMENT BY 1
        START WITH 1006
        MAXVALUE 9999999999
        NOCACHE
        NOCYCLE;

-- Para cargo
CREATE SEQUENCE carg_carid
        INCREMENT BY 1
        START WITH 6
        MAXVALUE 99
        NOCACHE
        NOCYCLE;

-- Para punto de vacunacion
CREATE SEQUENCE punt_punid
        INCREMENT BY 1
        START WITH 6
        MAXVALUE 99999
        NOCACHE
        NOCYCLE;

-- Para lote
CREATE SEQUENCE lot_lotid
        INCREMENT BY 1
        START WITH 06
        MAXVALUE 9999999999
        NOCACHE
        NOCYCLE;

-- No se crea secuencia de fabricante, puesto que los fabricantes son limitados.

-- No se crea secuencia de Transportadora ya que las empresas que transportan, son limitadas.

-- Para pais
CREATE SEQUENCE pais_paisid
        INCREMENT BY 1
        START WITH 10
        MAXVALUE 195
        NOCACHE
        NOCYCLE;

-- No se crea secuencia para Aerolinea, ya que las aerolineas utilizadas, son limitadas.

-- Para avion
CREATE SEQUENCE avion_avionid
        INCREMENT BY 1
        START WITH 6
        MAXVALUE 19583
        NOCACHE
        NOCYCLE;

-- Para inventario
CREATE SEQUENCE sq_invenido
        INCREMENT BY 1
        START WITH 10000006
        MAXVALUE 9999999999
        NOCACHE
        NOCYCLE;

-- No se crea secuencia vacuna, ya que las vacunas que hay actualmente son limitadas.

-- No se crea secuencia de tipo de vacuna, ya que los tipos que existen son limitados.

-- Para info dosis
CREATE SEQUENCE dosis_dosid
        INCREMENT BY 1
        START WITH 008
        MAXVALUE 9999999999
        NOCACHE
        NOCYCLE;

-- No se crea secuencia de IPS, ya que el nit es un número que varia.

-- Para cernet vacuna
CREATE SEQUENCE carnet_carnetid
        INCREMENT BY 1
        START WITH 6
        MAXVALUE 50000000
        NOCACHE
        NOCYCLE;

-- Para paciente
CREATE SEQUENCE paciente_pacienteid
        INCREMENT BY 1
        START WITH 100006
        MAXVALUE 50000000
        NOCACHE
        NOCYCLE;

-- Para afiliacion
CREATE SEQUENCE afil_afilid
        INCREMENT BY 1
        START WITH 10000006
        MAXVALUE 9999999999
        NOCACHE
        NOCYCLE;

-- No se crea secuencia para ciudad, ya que tiene codigo postal y estos codigos no siguen una secuencia.

-- No se crea secuencia para tipo de afilicion, ya que este tipo es limitado.

-- No se crea secuencia de caja de compensacion, ya que las cajas que existen son limitadas y el nit varia.

-- Indices

CREATE INDEX MUNICIPIO_IDEPARTAMENTO_IDX
ON MUNICIPIO(ID_DEPARTAMENTO);

CREATE INDEX EMPLEADO_SALARIO_IDX
ON EMPLEADO(SALARIO);

CREATE INDEX VACUNA_TIPO_IDX
ON VACUNA(ID_TIPO_VACUNA);

CREATE INDEX AEROLINEA_PAIS_IDX
ON AEROLINEA(ID_PAIS);

CREATE INDEX FABRICANTE_COSTO_IDX
ON FABRICANTE(COSTO);

-- Sinonimos

CREATE SYNONYM CED_PER
FOR PERSONA_CEDULA;

CREATE SYNONYM DEPT_PER
FOR PERSONA_DEPARTAMENTO;

CREATE SYNONYM CAJA_EMP
FOR EMPLEADO_CAJA;

CREATE SYNONYM PROM_EMP_CAJA
FOR CAJA_EMPLEADO_AVG;

CREATE SYNONYM CARO_L
FOR LOTE_CARO;

CREATE SYNONYM T_I
FOR TIPO_IDENTIFICACION;

CREATE SYNONYM C_COMP
FOR CAJA_COMPENSACION;

CREATE SYNONYM T_A
FOR TIPO_AFILIACION;

CREATE SYNONYM I_D
FOR INFO_DOSIS;

CREATE SYNONYM T_V
FOR TIPO_VACUNA;

CREATE SYNONYM P_VA
FOR PUNTO_VACUNACION;

CREATE SYNONYM GR_E
FOR GRUPO_ETNICO;

CREATE SYNONYM T_S
FOR TIPO_SANGRE;

CREATE SYNONYM FAB
FOR FABRICANTE;

-- Seguridad Proyecto
-- El nombre del script: "Crear_Roles_Privilegios.sql"

CREATE ROLE pacienteVacunacion;
CREATE ROLE enfermeraVacunacion;
CREATE ROLE medicoVacunacion;
CREATE ROLE supervisorVacunacion;
CREATE ROLE auxEnfermeriaVacunacion;

GRANT select
ON PACIENTE_INFO  
to pacienteVacunacion;
--------------------------------------------------
GRANT select, update, alter, delete, insert
ON INFO_DOSIS
to enfermeraVacunacion;
-------------------------------------------------
GRANT select, update, alter, delete, insert
ON INFO_DOSIS
to medicoVacunacion;

GRANT select, update, alter, delete, insert
ON PUNTO_VACUNACION
to medicoVacunacion;

GRANT delete, insert, select, update
ON PACIENTE_INFO
to medicoVacunacion;

GRANT delete, insert, select, update
ON LOTE_VACUNA
to medicoVacunacion;
--------------------------------------------------
GRANT delete, insert, select, update
ON  LOTE_VACUNA
to supervisorVacunacion;

GRANT delete, insert, select, update
ON LOTE_VACUNA
to supervisorVacunacion;
--------------------------------------------------
GRANT select, update, insert
on INFO_DOSIS
to auxEnfermeriaVacunacion;


-- Auditoria

CREATE TABLE AUD_DEPT(
    usuario VARCHAR2(50),
    fecha DATE,
    old_deptno NUMBER(2),
    old_dname VARCHAR2(14),
    old_loc VARCHAR2(13),
    new_deptno NUMBER(2),
    new_dname VARCHAR2(14),
    new_loc VARCHAR2(13)
);

CREATE OR REPLACE TRIGGER tr_dept
    AFTER DELETE OR INSERT OR UPDATE ON DEPT
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_DEPT 
        VALUES (user, sysdate,:old.deptno,:old.dname,:old.loc,:new.deptno,:new.dname,:new.loc); 
    ELSIF updating THEN
        INSERT INTO AUD_DEPT 
        VALUES (user, sysdate,:old.deptno,:old.dname,:old.loc,:new.deptno,:new.dname,:new.loc);
    ELSE
        INSERT INTO AUD_DEPT 
        VALUES (user, sysdate,:old.deptno,:old.dname,:old.loc,:new.deptno,:new.dname,:new.loc);
    END IF;
END tr_dept;

-- AUDITORIAS

CREATE TABLE AUD_EMPLEADO(
    usuario VARCHAR2(20),
    fecha DATE,
    old_id NUMBER(10),
    old_salario NUMBER(20),
    new_id NUMBER(10),
    new_salario NUMBER(20),
    informacion VARCHAR2(40)
);

CREATE OR REPLACE TRIGGER tr_empleado
    AFTER DELETE OR INSERT OR UPDATE ON EMPLEADO
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_EMPLEADO 
        VALUES (user, sysdate,:old.id,:old.salario,:new.id,:new.salario,'Se ha insertado un dato'); 
    ELSIF updating THEN
        INSERT INTO AUD_EMPLEADO 
        VALUES (user, sysdate,:old.id,:old.salario,:new.id,:new.salario,'Se ha actualizado un dato');
    ELSE
        INSERT INTO AUD_EMPLEADO 
        VALUES (user, sysdate,:old.id,:old.salario,:new.id,:new.salario,'Se ha borrado un dato');
    END IF;
END tr_empleado;
/

CREATE TABLE AUD_INVENTARIO(
    usuario VARCHAR2(20),
    fecha DATE,
    old_codigo NUMBER(10),
    old_estado VARCHAR2(20),
    new_codigo NUMBER(10),
    new_estado VARCHAR2(20),
    informacion VARCHAR2(40)
);

CREATE OR REPLACE TRIGGER tr_inventario
    AFTER DELETE OR INSERT OR UPDATE ON INVENTARIO
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_INVENTARIO 
        VALUES (user, sysdate,:old.codigo,:old.estado,:new.codigo,:new.estado,'Se ha insertado un dato'); 
    ELSIF updating THEN
        INSERT INTO AUD_INVENTARIO 
        VALUES (user, sysdate,:old.codigo,:old.estado,:new.codigo,:new.estado,'Se ha actualizado un dato');
    ELSE
        INSERT INTO AUD_INVENTARIO 
        VALUES (user, sysdate,:old.codigo,:old.estado,:new.codigo,:new.estado,'Se ha borrado un dato');
    END IF;
END tr_inventario;
/

CREATE TABLE AUD_AVION(
    usuario VARCHAR2(20),
    fecha DATE,
    old_id NUMBER(5),
    old_nombre VARCHAR2(20),
    old_costo_uso NUMBER(30),
    new_id NUMBER(5),
    new_nombre VARCHAR2(20),
    new_costo_uso NUMBER(30),
    informacion VARCHAR2(40)
);

CREATE OR REPLACE TRIGGER tr_avion
    AFTER DELETE OR INSERT OR UPDATE ON AVION
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_AVION 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.costo_uso,:new.id,:new.nombre,:new.costo_uso,'Se ha insertado un dato'); 
    ELSIF updating THEN
        INSERT INTO AUD_AVION 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.costo_uso,:new.id,:new.nombre,:new.costo_uso,'Se ha actualizado un dato');
    ELSE
        INSERT INTO AUD_AVION 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.costo_uso,:new.id,:new.nombre,:new.costo_uso,'Se ha borrado un dato');
    END IF;
END tr_avion;
/

CREATE TABLE AUD_TRANSPORTADORA(
    usuario VARCHAR2(20),
    fecha DATE,
    old_id NUMBER(3),
    old_nombre VARCHAR2(20),
    old_email VARCHAR2(50),
    old_telefono VARCHAR2(50),
    old_costo NUMBER(30),
    new_id NUMBER(3),
    new_nombre VARCHAR2(20),
    new_email VARCHAR2(50),
    new_telefono VARCHAR2(50),
    new_costo NUMBER(30),
    informacion VARCHAR2(40)
);

CREATE OR REPLACE TRIGGER tr_transportadora
    AFTER DELETE OR INSERT OR UPDATE ON TRANSPORTADORA
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_TRANSPORTADORA 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.email,:old.telefono,:old.costo,:new.id,:new.nombre,:new.email,:new.telefono,:new.costo,'Se ha insertado un dato'); 
    ELSIF updating THEN
        INSERT INTO AUD_TRANSPORTADORA 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.email,:old.telefono,:old.costo,:new.id,:new.nombre,:new.email,:new.telefono,:new.costo,'Se ha actualizado un dato');
    ELSE
        INSERT INTO AUD_TRANSPORTADORA 
        VALUES (user, sysdate,:old.id,:old.nombre,:old.email,:old.telefono,:old.costo,:new.id,:new.nombre,:new.email,:new.telefono,:new.costo,'Se ha borrado un dato');
    END IF;
END tr_transportadora;
/

CREATE TABLE AUD_FABRICANTE(
    usuario VARCHAR2(20),
    fecha DATE,
    old_nit NUMBER(10),
    old_nombre VARCHAR2(20),
    old_direccion_principal VARCHAR2(20),
    old_email VARCHAR2(50),
    old_telefono VARCHAR2(50),
    old_costo NUMBER(30),
    new_nit NUMBER(10),
    new_nombre VARCHAR2(20),
    new_direccion_principal VARCHAR2(20),
    new_email VARCHAR2(50),
    new_telefono VARCHAR2(50),
    new_costo NUMBER(30),
    informacion VARCHAR2(40)
);

CREATE OR REPLACE TRIGGER tr_fabricante
    AFTER DELETE OR INSERT OR UPDATE ON FABRICANTE
    FOR EACH ROW
BEGIN
    IF inserting THEN
        INSERT INTO AUD_FABRICANTE 
        VALUES (user, sysdate,:old.nit,:old.nombre,:old.direccion_principal,:old.email,:old.telefono,:old.costo,:new.nit,:new.nombre,:new.direccion_principal,:new.email,:new.telefono,:new.costo,'Se ha insertado un dato'); 
    ELSIF updating THEN
        INSERT INTO AUD_FABRICANTE 
        VALUES (user, sysdate,:old.nit,:old.nombre,:old.direccion_principal,:old.email,:old.telefono,:old.costo,:new.nit,:new.nombre,:new.direccion_principal,:new.email,:new.telefono,:new.costo,'Se ha actualizado un dato');
    ELSE
        INSERT INTO AUD_FABRICANTE 
        VALUES (user, sysdate,:old.nit,:old.nombre,:old.direccion_principal,:old.email,:old.telefono,:old.costo,:new.nit,:new.nombre,:new.direccion_principal,:new.email,:new.telefono,:new.costo,'Se ha borrado un dato');
    END IF;
END tr_fabricante;
/

INSERT INTO EMPLEADO (id,fecha_ingreso,salario,id_persona,id_cargo,nit_caja) 
VALUES (1006,'22/05/2002',1890000,10,4,8600669427);

UPDATE EMPLEADO 
SET salario = 2000000
WHERE id = 1006;

DELETE FROM EMPLEADO WHERE id = 1006;


-- Mineria de Datos

-- Consultas 

-- Gente que tiene una sola dosis y ya cumplieron el tiempo para la segunda dosis
-- Usar  las tablas paciente, carnet, info_dosis
SELECT Persona.nombre, Persona.apellido, Persona.id, Info_dosis.fecha, ROW_NUMBER() OVER (PARTITION BY Info_dosis.fecha ORDER BY Persona.id)
FROM Persona
INNER JOIN Paciente ON Persona.id = Paciente.id_persona
INNER JOIN Carnet_vacuna ON Paciente.id = carnet_vacuna.id_paciente
INNER JOIN Info_dosis ON Carnet_vacuna.id = Info_dosis.id_carnet
WHERE Info_dosis.dosis = 1; 


SELECT p.nombre, p.apellido, p.id, i.fecha
FROM PERSONA p, PACIENTE pa, CARNET_VACUNA c, INFO_DOSIS i
WHERE p.id = pa.id_persona AND pa.id = c.id_paciente AND c.id = i.id_carnet AND i.dosis = 1
Order By p.nombre;

-- Buscar puntos en donde menos se vacunan, para promocionar que se vacunen alli.


-- Hace un top de la vacuna mas colocada, para pedir mas de esta vacuna, ya que la gente le tendra mas confianza o es mas economica

SELECT v.id, v.nombre, COUNT(id_inventario) as Veces_Colocadas
FROM Vacuna v, Info_dosis info, Inventario i
WHERE v.id = i.id_vacuna AND info.id_inventario = i.codigo
GROUP BY v.id, v.nombre
ORDER BY Veces_Colocadas desc;

-- Buscar que los pacientes que tiene la menor afiliacion para todas las cajas sin excepcion ya que el estado busca dar una ayuda a estas personas
-- para que se vean incentivados a vacunarse en un mejor plan durante un tiempo limitado y motivar la vacunacion.

SELECT p.id, p.nombre, p.apellido, t.nombre as tipo_afiliacion, c.nombre as Nombre_Caja   
FROM Persona p, Paciente pa, Afiliacion a, Tipo_Afiliacion t, Caja_compensacion c
WHERE p.id = pa.id_persona AND pa.id = a.id_paciente AND a.nit_caja = c.nit AND a.id_tipo_afiliacion = t.id AND t.id = 12000004;



-- Top de los cargos y lo maximo que se puede ganar con estos, Esto con el fin de que el publico pueda ver que cargos son los que mejor salario tienen y estudien para
-- ello.
SELECT c.id, c.nombre, MAX(salario) as Mas_Gana
FROM Empleado e, Cargo c
WHERE e.id_cargo = c.id 
GROUP BY c.id, c.nombre
ORDER BY Mas_Gana desc;

-- Buscar las IPS que han expedido menos info_dosis, para hacer publicidad a estas ips y que las personas tengan informacion de donde mas vacunan
-- de lugares 
-- o para que que el estado pueda estudiar por que estos centros son los que menos han expedidos, ya sea ir a revisar el sistema de tecnologia
-- o si es que no cuentan con las herramientas necesarias para una rapida expedicion de carnets y poder ayudar alli.

SELECT i.nit, i.nombre, COUNT(nit_ips) as Cantidad_Expedida
FROM IPS i, Info_dosis info
WHERE i.nit = info.nit_ips 
GROUP BY i.nit, i.nombre
ORDER BY Cantidad_Expedida;

-- Este muestra los cargos que ganan por debajo del promedio de todos los cargos, para poder verificar si si deberian ganar menos del promedio
-- o si se deberia aumentar el salario en esos cargos  
SELECT c.id, c.nombre, AVG(salario) as Mas_Gana
FROM Empleado e, Cargo c
WHERE e.id_cargo = c.id AND e.salario < ALL (SELECT AVG(salario) FROM empleado)
GROUP BY c.id, c.nombre
ORDER BY Mas_Gana desc;

-- Buscar departamentos con 2 dosis o menos, para hacer publicidad de que se vayan a vacunar
